type int_arr = array of int
type bounded_int_arr = {
  data: int_arr,
  size: int
}

/* create a new bounded_int_arr */
function bounded_int_arr(n: int, v: int): bounded_int_arr =
  bounded_int_arr {
    data = int_arr [n] of v,
    size = n
  }

/* find minimal value inside an array */
function min(arr: bounded_int_arr): int =
  if arr.size = 0
    then 0
    else (
      let
        var min := arr.data[0]
      in
        for i := 1 to arr.size - 1 do (
          if min > arr.data[i]
            then min := arr.data[i]
        );
        min
      end
    )

/* calculate the remainder of the division of a by b */
function rem(a: int, b: int): int =
  a - a / b * b
